// schema.prisma

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id         Int      @default(autoincrement())
  externalId String   @id @unique
  attributes Json
  createdAt  DateTime @default(now())
  updateAt   DateTime @updatedAt
}

model Images {
  id          Int    @id @default(autoincrement())
  base64      String
  user_id     String
  property_id String
}

model Property {
  id              Int      @id @default(autoincrement())
  description     String?
  title           String?
  user_id         String
  addressMap      String?
  size            String?
  lotSize         String?
  rooms           String?
  bedrooms        String?
  garages         String?
  garagesize      String?
  yearbuilt       String?
  availablefrom   String?
  comments        String?
  youtubeVideoId  String?
  youtubeVideoUrl String?
  fileInput       String?
  createdAt       DateTime @default(now())
  updateAt        DateTime @updatedAt
}

model PropertyFeaturesAminites {
  id         Int    @id @default(autoincrement())
  label      String
  //Property   Property? @relation(fields: [propertyId], references: [id])
  propertyId Int?
}

//model PropertyNearby PropertyHeader PropertyVideo PropertyGallery property-view ProperytyDescriptions ReviewBoxForm reviews ContactWithAgent ScheduleTour MortgageCalculator WalkScore
